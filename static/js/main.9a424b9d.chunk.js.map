{"version":3,"sources":["utils.js","WebAPI.js","contexts.js","pages/LoginPage/LoginPage.js","pages/HomePage/HomePage.js","pages/PostPage/PostPage.js","pages/NewPostPage/NewPostPage.js","pages/RegisterPage/RegisterPage.js","pages/AboutPage/AboutPage.js","components/Header/Header.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getPosts","startPoint","fetch","then","res","json","getPostById","id","getMe","headers","authorization","AuthContext","createContext","ErrorMessage","styled","div","LoginPage","setUser","useContext","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","history","useHistory","onSubmit","e","preventDefault","method","body","JSON","stringify","login","data","ok","message","response","toString","push","value","onChange","target","type","Root","PostContainer","PostTitle","Link","PostDate","ChangePageContainer","ChangePageButton","button","Post","post","to","title","Date","createdAt","toLocaleString","HomePage","posts","setPosts","lastPage","setLastPage","nextPage","setNextPage","setStartPoint","useEffect","length","map","onClick","PostInfo","PostNickName","PostContent","p","PostPage","setPost","useParams","newPost","nickname","NewPostTitle","input","NewPostTextarea","textarea","NewPostButton","NewPostPage","newPostContent","setNewPostContent","newPostTitle","setNewPostTitle","handleFocus","name","onFocus","placeholder","setNickname","register","console","log","AboutPage","HeaderComtainer","Brand","NavbarList","Nav","props","$active","LeftContainer","Header","location","useLocation","user","pathname","App","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.9a424b9d.chunk.js","sourcesContent":["const TOKEN_NAME = 'token';\r\n\r\nexport const setAuthToken = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, token);\r\n};\r\n\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME);\r\n};\r\n","import { getAuthToken } from './utils';\r\n\r\nconst BASE_URL = 'https://student-json-api.lidemy.me';\r\n\r\nconst getPosts = (startPoint) => {\r\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc&_start=${startPoint}&_limit=5`).then((res) => res.json());\r\n};\r\n\r\nconst getPostById = (id) => {\r\n  return fetch(`${BASE_URL}/posts?id=${id}`).then((res) => res.json());\r\n};\r\n\r\nconst register = (nickname, username, password) => {\r\n  return fetch(`${BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nconst getMe = () => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nconst newPost = (title, body) => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/posts`, {\r\n    method: 'POST',\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport { getPosts, getPostById, register, login, getMe, newPost };\r\n","import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext(null);\r\n","import styled from 'styled-components';\nimport React, { useState, useContext } from 'react';\nimport { login, getMe } from '../../WebAPI';\nimport { setAuthToken } from '../../utils';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from '../../contexts';\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrorMessage(null);\n    login(username, password).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n      getMe().then((response) => {\n        if (!response.ok) {\n          setAuthToken(null);\n          return setErrorMessage(response.toString());\n        }\n        setUser(response.data);\n        history.push('/');\n      });\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        username: <input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </div>\n      <div>\n        password: <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      </div>\n      <button>登入</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </form>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { getPosts } from '../../WebAPI';\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 20px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst ChangePageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 8px;\n`;\n\nconst ChangePageButton = styled.button`\n  padding: 8px 16px;\n  background: rgba(0, 0, 0, 0.1);\n  border: none;\n  margin: 4px;\n  cursor: pointer;\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState([]);\n  const [lastPage, setLastPage] = useState();\n  const [nextPage, setNextPage] = useState();\n  const [startPoint, setStartPoint] = useState(0);\n\n  function getPages() {\n    getPosts(startPoint).then((posts) => {\n      setPosts(posts);\n    });\n    getPosts(startPoint + 5).then((nextPage) => {\n      if (nextPage.length === 0) {\n        return setNextPage(false);\n      }\n      setNextPage(true);\n    });\n    getPosts(startPoint - 5).then((lastPage) => {\n      if (lastPage.length === 0) {\n        return setLastPage(null);\n      }\n      setLastPage(true);\n    });\n  }\n\n  useEffect(() => {\n    getPages();\n  }, [startPoint]);\n\n  return (\n    <Root>\n      {posts.map((post) => (\n        <Post key={post.id} post={post} />\n      ))}\n      <ChangePageContainer>\n        {lastPage === true && (\n          <ChangePageButton\n            onClick={() => {\n              setStartPoint(startPoint - 5);\n            }}\n          >\n            上一頁\n          </ChangePageButton>\n        )}\n        {nextPage === true && (\n          <ChangePageButton\n            onClick={() => {\n              setStartPoint(startPoint + 5);\n            }}\n          >\n            下一頁\n          </ChangePageButton>\n        )}\n      </ChangePageContainer>\n    </Root>\n  );\n}\n","import styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport { getPostById } from '../../WebAPI';\n\nimport React, { useState, useEffect } from 'react';\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  padding: 0 20%;\n`;\n\nconst PostTitle = styled.div`\n  text-align: center;\n  font-size: 36px;\n  font-weight: bold;\n  color: #333;\n  text-decoration: none;\n  margin-top: 64px;\n`;\n\nconst PostInfo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  margin-top: 16px;\n`;\nconst PostNickName = styled.div`\n  color: #333;\n  font-size: 24px;\n`;\n\nconst PostDate = styled.div`\n  font-size: 20px;\n  color: #333;\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst PostContent = styled.p`\n  margin-top: 32px;\n  font-size: 20px;\n  line-height: 2em;\n`;\n// Post.propTypes = {\n//   post: PropTypes.object,\n// };\n\nexport default function PostPage() {\n  const [post, setPost] = useState({});\n  let { id } = useParams();\n  useEffect(() => {\n    getPostById(id).then((newPost) => setPost(...newPost));\n  }, [id]);\n\n  return (\n    <Root>\n      <PostContainer>\n        <PostTitle>{post && post.title}</PostTitle>\n        <PostInfo>\n          <PostNickName>{post && post.nickname}</PostNickName>\n          <PostDate>{post && new Date(post.createdAt).toLocaleString()}</PostDate>\n        </PostInfo>\n        <PostContent>{post && post.body}</PostContent>\n      </PostContainer>\n    </Root>\n  );\n}\n","import styled from 'styled-components';\nimport { newPost } from '../../WebAPI';\nimport { useHistory } from 'react-router-dom';\nimport React, { useState } from 'react';\n\nconst Root = styled.div`\n  width: 50%;\n  margin: 100px auto;\n`;\n\nconst PostContainer = styled.div`\n  position: relative;\n`;\n\nconst NewPostTitle = styled.input`\n  width: 20em;\n  padding: 8px;\n`;\n\nconst NewPostTextarea = styled.textarea`\n  width: 100%;\n  height: 400px;\n  margin-top: 8px;\n  padding: 8px;\n  box-sizing: border-box;\n`;\n\nconst NewPostButton = styled.button`\n  position: absolute;\n  right: 0;\n  bottom: -48px;\n  padding: 8px 32px;\n`;\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nexport default function NewPostPage() {\n  const [newPostContent, setNewPostContent] = useState('');\n  const [newPostTitle, setNewPostTitle] = useState('');\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleTitleChange = (e) => {\n    setNewPostTitle(e.target.value);\n  };\n  const handlePostContentChange = (e) => {\n    setNewPostContent(e.target.value);\n  };\n  const handleFocus = () => {\n    setErrorMessage('');\n  };\n\n  const handleNewPostSubmit = (e) => {\n    e.preventDefault();\n    newPost(newPostTitle, newPostContent).then((response) => {\n      if (response.ok === 0) {\n        return setErrorMessage(response.message);\n      }\n      history.push('/');\n    });\n  };\n\n  return (\n    <Root>\n      <PostContainer>\n        <form onSubmit={handleNewPostSubmit}>\n          <NewPostTitle\n            name=\"newPostTitle\"\n            value={newPostTitle}\n            onChange={handleTitleChange}\n            onFocus={handleFocus}\n            placeholder=\"文章標題...\"\n          ></NewPostTitle>\n          <NewPostTextarea\n            name=\"newPostContent\"\n            value={newPostContent}\n            onChange={handlePostContentChange}\n            onFocus={handleFocus}\n            placeholder=\"文章內文...\"\n          ></NewPostTextarea>\n          <NewPostButton>送出</NewPostButton>\n        </form>\n      </PostContainer>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Root>\n  );\n}\n","import styled from 'styled-components';\nimport React, { useState, useContext } from 'react';\nimport { register, getMe } from '../../WebAPI';\nimport { setAuthToken } from '../../utils';\nimport { useHistory } from 'react-router-dom';\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nexport default function LoginPage() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [errorMessage, setErrorMessage] = useState();\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrorMessage(null);\n    register(nickname, username, password).then((data) => {\n      console.log(data);\n      if (!data.ok) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n      getMe().then((response) => {\n        if (!response.ok) {\n          setAuthToken(null);\n          return setErrorMessage(response.message);\n        }\n        history.push('/');\n      });\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        username: <input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </div>\n      <div>\n        password: <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      </div>\n      <div>\n        nickname:{' '}\n        <input\n          type=\"nickname\"\n          value={nickname}\n          onChange={(e) => {\n            setNickname(e.target.value);\n          }}\n        />\n      </div>\n      <button>登入</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </form>\n  );\n}\n","import styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport { getPostById } from '../../WebAPI';\n\nimport React, { useState, useEffect } from 'react';\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  padding: 0 20%;\n`;\n\nconst PostTitle = styled.div`\n  text-align: center;\n  font-size: 36px;\n  font-weight: bold;\n  color: #333;\n  text-decoration: none;\n  margin-top: 64px;\n`;\n\nconst PostInfo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  margin-top: 16px;\n`;\nconst PostNickName = styled.div`\n  color: #333;\n  font-size: 24px;\n`;\n\nconst PostDate = styled.div`\n  font-size: 20px;\n  color: #333;\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst PostContent = styled.p`\n  margin-top: 32px;\n  font-size: 20px;\n  line-height: 2em;\n`;\n// Post.propTypes = {\n//   post: PropTypes.object,\n// };\n\nexport default function AboutPage() {\n  const [post, setPost] = useState({});\n  let { id } = useParams();\n  useEffect(() => {\n    getPostById(id).then((newPost) => setPost(...newPost));\n  }, [id]);\n\n  return (\n    <Root>\n      <PostContainer>\n        <PostTitle>{post && post.title}</PostTitle>\n        <PostInfo>\n          <PostNickName>{post && post.nickname}</PostNickName>\n          <PostDate>{post && new Date(post.createdAt).toLocaleString()}</PostDate>\n        </PostInfo>\n        <PostContent>{post && post.body}</PostContent>\n      </PostContainer>\n    </Root>\n  );\n}\n","import { Link, useLocation, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport React, { useContext } from 'react';\nimport { AuthContext } from '../../contexts';\nimport { setAuthToken } from '../../utils';\n\nconst HeaderComtainer = styled.div`\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0px 20%;\n  box-sizing: border-box;\n  background: white;\n`;\n\nconst Brand = styled.div`\n  font-size: 32px;\n  font-weight: bold;\n`;\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 64px;\n`;\n\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  box-sizing: border-box;\n  width: 100px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n\n  ${(props) =>\n    props.$active &&\n    `\n    background: rgba(0,0,0,0.1);\n    `}\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n  ${NavbarList} {\n    margin-left: 64px;\n  }\n`;\nexport default function Header() {\n  const location = useLocation();\n  const history = useHistory();\n  const { user, setUser } = useContext(AuthContext);\n\n  const handleLogout = () => {\n    setAuthToken('');\n    setUser(null);\n    if (location.pathname !== '/') {\n      history.push('/');\n    }\n  };\n\n  return (\n    <HeaderComtainer>\n      <LeftContainer>\n        <Brand>部落格</Brand>\n        <NavbarList>\n          <Nav to={'/'} $active={location.pathname === '/'}>\n            首頁\n          </Nav>\n          <Nav to={'/about'} $active={location.pathname === '/about'}>\n            About\n          </Nav>\n          {user && (\n            <Nav to={'/new-post'} $active={location.pathname === '/new-post'}>\n              發布文章\n            </Nav>\n          )}\n        </NavbarList>\n      </LeftContainer>\n      <NavbarList>\n        {!user && (\n          <Nav to={'/register'} $active={location.pathname === '/register'}>\n            註冊\n          </Nav>\n        )}\n        {!user && (\n          <Nav to={'/login'} $active={location.pathname === '/login'}>\n            登入\n          </Nav>\n        )}\n\n        {user && <Nav onClick={handleLogout}>登出</Nav>}\n      </NavbarList>\n    </HeaderComtainer>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport LoginPage from '../../pages/LoginPage';\nimport HomePage from '../../pages/HomePage';\nimport PostPage from '../../pages/PostPage';\nimport NewPostPage from '../../pages/NewPostPage';\nimport RegisterPage from '../../pages/RegisterPage';\nimport AboutPage from '../../pages/AboutPage';\nimport Header from '../Header';\nimport { AuthContext } from '../../contexts';\nimport { getMe } from '../../WebAPI';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nfunction App() {\n  const [user, setUser] = useState();\n\n  useEffect(() => {\n    if (localStorage.token) {\n      getMe().then((response) => {\n        if (response.ok) {\n          setUser(response.data);\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route path=\"/post/:id\">\n              <PostPage />\n            </Route>\n            <Route path=\"/new-post\">\n              <NewPostPage />\n            </Route>\n            <Route path=\"/register\">\n              <RegisterPage />\n            </Route>\n            <Route path=\"/about\">\n              <AboutPage />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nReactDOM.render(\n  <BrowserRouter basename=\"/react-blog\">\n    <Switch>\n      <App />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}